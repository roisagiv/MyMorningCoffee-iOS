# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

devices = ["iPhone SE (12.2)", "iPhone 11 Pro (13.0)"]

platform :ios do
  before_all { setup_circle_ci }

  desc "Description of what the lane does"
  lane :format do
    sh "cd ../; ./Pods/SwiftFormat/CommandLineTool/swiftformat MyMorningCoffee --config .swiftformat"
    sh "cd ../; ./Pods/SwiftFormat/CommandLineTool/swiftformat MyMorningCoffeeTests --config .swiftformat"

    swiftlint(
      mode: "autocorrect",
      executable: "Pods/SwiftLint/swiftlint",
      config_file: ".swiftlint.yml",
    )

    swiftlint(
      mode: "lint",
      executable: "Pods/SwiftLint/swiftlint",
      config_file: ".swiftlint.yml",
    )
  end

  desc "run all tests"
  lane :test do
    setup

    scan(
      workspace: "MyMorningCoffee.xcworkspace",
      scheme: "MyMorningCoffee",
      devices: devices,
      disable_concurrent_testing: true,
      include_simulator_logs: false,
      clean: false,
    )
  end

  desc "run all tests (skip build)"
  lane :test_no_build do
    scan(
      devices: devices,
      test_without_building: true,
      derived_data_path: "DerivedData",
    )
  end

  desc "generate app icon"
  lane :assets do
    appicon(
      appicon_devices: %i[iphone ios_marketing],
      appicon_path: "MyMorningCoffee/Assets.xcassets",
    )
  end

  desc "setup environment"
  lane :setup do
    path = "./MyMorningCoffee/GoogleService-Info.plist"
    sh "cd ../; cp ./MyMorningCoffee/GoogleService-Info.plist.template #{path}"
    [
      "CLIENT_ID",
      "REVERSED_CLIENT_ID",
      "API_KEY",
      "GCM_SENDER_ID",
      "GOOGLE_APP_ID",
    ].each { |key|
      set_info_plist_value(
        path: path,
        key: key,
        value: ENV[key],
        output_file_name: path,
      )
    }
  end
end
